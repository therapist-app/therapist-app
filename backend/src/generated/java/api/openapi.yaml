openapi: 3.0.1
servers:
- description: Generated server url
  url: http://backend-patient-app-main.jonas-blum.ch
security:
- X-Coach-Key: []
paths:
  /patients/passwords:
    put:
      operationId: changePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordDTO'
        required: true
      responses:
        "204":
          description: No Content
      tags:
      - patient-controller
      x-content-type: application/json
      x-accepts: application/json
  /patients/onboarded:
    get:
      operationId: getOnboarded
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PatientOutputDTO'
          description: OK
      tags:
      - patient-controller
      x-accepts: '*/*'
    put:
      operationId: setOnboarded
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutOnboardedDTO'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - patient-controller
      x-content-type: application/json
      x-accepts: application/json
  /patients/name:
    get:
      operationId: getName
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PatientOutputDTO'
          description: OK
      tags:
      - patient-controller
      x-accepts: '*/*'
    put:
      operationId: setName
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutNameDTO'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - patient-controller
      x-content-type: application/json
      x-accepts: application/json
  /patients/meetings/{meetingId}:
    delete:
      operationId: deleteMeeting
      parameters:
      - explode: false
        in: path
        name: meetingId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      tags:
      - meeting-controller
      x-accepts: application/json
    get:
      operationId: getMeeting
      parameters:
      - explode: false
        in: path
        name: meetingId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MeetingOutputDTO'
          description: OK
      tags:
      - meeting-controller
      x-accepts: '*/*'
    put:
      operationId: updateMeeting
      parameters:
      - explode: false
        in: path
        name: meetingId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMeetingDTO'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MeetingOutputDTO'
          description: OK
      tags:
      - meeting-controller
      x-content-type: application/json
      x-accepts: '*/*'
  /patients/language:
    get:
      operationId: getLanguage
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PatientOutputDTO'
          description: OK
      tags:
      - patient-controller
      x-accepts: '*/*'
    put:
      operationId: setLanguage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutLanguageDTO'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - patient-controller
      x-content-type: application/json
      x-accepts: application/json
  /patients/journal-entries/{entryId}:
    delete:
      operationId: deleteEntry
      parameters:
      - explode: false
        in: path
        name: entryId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      tags:
      - journal-entry-controller
      x-accepts: application/json
    get:
      operationId: getOne
      parameters:
      - explode: false
        in: path
        name: entryId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JournalEntryOutputDTO'
          description: OK
      tags:
      - journal-entry-controller
      x-accepts: '*/*'
    put:
      operationId: updateJournalEntry
      parameters:
      - explode: false
        in: path
        name: entryId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalEntryRequestDTO'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JournalEntryOutputDTO'
          description: OK
      tags:
      - journal-entry-controller
      x-content-type: application/json
      x-accepts: '*/*'
  /patients/exercises/{exerciseId}/exercise-components/{exerciseComponentId}:
    post:
      operationId: postExerciseComponentResult
      parameters:
      - explode: false
        in: path
        name: exerciseId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: exerciseComponentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseComponentResultInputDTO'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - exercise-controller
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: putExerciseComponentResult
      parameters:
      - explode: false
        in: path
        name: exerciseId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: exerciseComponentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseComponentResultInputDTO'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - exercise-controller
      x-content-type: application/json
      x-accepts: application/json
  /patients/exercises/{exerciseId}/exercise-completion-name:
    post:
      operationId: postExerciseCompletionName
      parameters:
      - explode: false
        in: path
        name: exerciseId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseCompletionNameInputDTO'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - exercise-controller
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: putExerciseCompletionName
      parameters:
      - explode: false
        in: path
        name: exerciseId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseCompletionNameInputDTO'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - exercise-controller
      x-content-type: application/json
      x-accepts: application/json
  /patients/conversations/{conversationId}:
    delete:
      operationId: deleteChat
      parameters:
      - explode: false
        in: path
        name: conversationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      tags:
      - conversation-controller
      x-accepts: application/json
    put:
      operationId: updateSharing
      parameters:
      - explode: false
        in: path
        name: conversationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSharingDTO'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - conversation-controller
      x-content-type: application/json
      x-accepts: application/json
  /patients/conversations/{conversationId}/conversation-name:
    put:
      operationId: postConversationName
      parameters:
      - explode: false
        in: path
        name: conversationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutConversationNameDTO'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - conversation-controller
      x-content-type: application/json
      x-accepts: application/json
  /patients/chat-bot-avatar:
    get:
      operationId: getAvatar
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PatientOutputDTO'
          description: OK
      tags:
      - patient-controller
      x-accepts: '*/*'
    put:
      operationId: setAvatar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAvatarDTO'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - patient-controller
      x-content-type: application/json
      x-accepts: application/json
  /coach/patients/{patientId}/psychological-tests/{psychologicalTestName}:
    get:
      operationId: getPsychologicalTestResults_1
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: psychologicalTestName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/PsychologicalTestOutputDTO'
                type: array
          description: OK
      security:
      - X-Coach-Key: []
      tags:
      - coach-psychological-test-controller
      x-accepts: '*/*'
    post:
      operationId: createPsychologicalTest_1
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: psychologicalTestName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PsychologicalTestAssignmentInputDTO'
        required: true
      responses:
        "201":
          description: Created
      security:
      - X-Coach-Key: []
      tags:
      - coach-psychological-test-controller
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: updatePsychologicalTest
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: psychologicalTestName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PsychologicalTestAssignmentInputDTO'
        required: true
      responses:
        "200":
          description: OK
      security:
      - X-Coach-Key: []
      tags:
      - coach-psychological-test-controller
      x-content-type: application/json
      x-accepts: application/json
  /coach/patients/{patientId}/meetings/{meetingId}:
    delete:
      operationId: deleteMeeting_1
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: meetingId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - X-Coach-Key: []
      tags:
      - coach-meeting-controller
      x-accepts: application/json
    get:
      operationId: getMeeting_1
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: meetingId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MeetingOutputDTO'
          description: OK
      security:
      - X-Coach-Key: []
      tags:
      - coach-meeting-controller
      x-accepts: '*/*'
    put:
      operationId: updateMeeting_1
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: meetingId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMeetingDTO'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MeetingOutputDTO'
          description: OK
      security:
      - X-Coach-Key: []
      tags:
      - coach-meeting-controller
      x-content-type: application/json
      x-accepts: '*/*'
  /coach/patients/{patientId}/exercises/{exerciseId}:
    delete:
      operationId: deleteExercise
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: exerciseId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - X-Coach-Key: []
      tags:
      - coach-exercise-controller
      x-accepts: application/json
    get:
      operationId: getExerciseInformation
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: exerciseId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ExerciseInformationOutputDTO'
                type: array
          description: OK
      security:
      - X-Coach-Key: []
      tags:
      - coach-exercise-controller
      x-accepts: '*/*'
    put:
      operationId: updateExercise
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: exerciseId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseUpdateInputDTO'
        required: true
      responses:
        "204":
          description: No Content
      security:
      - X-Coach-Key: []
      tags:
      - coach-exercise-controller
      x-content-type: application/json
      x-accepts: application/json
  /coach/patients/{patientId}/exercises/{exerciseId}/exercise-components/{exerciseComponentId}:
    delete:
      operationId: deleteExerciseComponent
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: exerciseId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: exerciseComponentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - X-Coach-Key: []
      tags:
      - coach-exercise-controller
      x-accepts: application/json
    put:
      operationId: updateExerciseComponent
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: exerciseId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: exerciseComponentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseComponentUpdateInputDTO'
        required: true
      responses:
        "204":
          description: No Content
      security:
      - X-Coach-Key: []
      tags:
      - coach-exercise-controller
      x-content-type: application/json
      x-accepts: application/json
  /coach/patients/{patientId}/chatbot:
    get:
      operationId: getChatbotConfigurations
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "409":
          content:
            '*/*':
              schema:
                type: string
          description: Conflict
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ChatbotConfigurationOutputDTO'
                type: array
          description: OK
      security:
      - X-Coach-Key: []
      tags:
      - coach-chatbot-controller
      x-accepts: '*/*'
    post:
      operationId: createChatbot
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChatbotDTO'
        required: true
      responses:
        "409":
          content:
            '*/*':
              schema:
                type: string
          description: Conflict
        "201":
          description: Created
      security:
      - X-Coach-Key: []
      tags:
      - coach-chatbot-controller
      x-content-type: application/json
      x-accepts: '*/*'
    put:
      operationId: updateChatbot
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChatbotDTO'
        required: true
      responses:
        "409":
          content:
            '*/*':
              schema:
                type: string
          description: Conflict
        "200":
          description: OK
      security:
      - X-Coach-Key: []
      tags:
      - coach-chatbot-controller
      x-content-type: application/json
      x-accepts: '*/*'
  /patients/tests:
    post:
      operationId: createPsychologicalTest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PsychologicalTestInputDTO'
        required: true
      responses:
        "201":
          description: Created
      tags:
      - psychological-test-controller
      x-content-type: application/json
      x-accepts: application/json
  /patients/register:
    post:
      description: "@Therapist app: pleas use /coach/patients/register as endpoint"
      operationId: registerPatient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePatientDTO'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PatientOutputDTO'
          description: Created
      summary: This endpoint will be removed
      tags:
      - patient-controller
      x-content-type: application/json
      x-accepts: '*/*'
  /patients/meetings:
    get:
      operationId: listMeetings
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/MeetingOutputDTO'
                type: array
          description: OK
      tags:
      - meeting-controller
      x-accepts: '*/*'
    post:
      operationId: createMeeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMeetingDTO'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MeetingOutputDTO'
          description: Created
      tags:
      - meeting-controller
      x-content-type: application/json
      x-accepts: '*/*'
  /patients/logout:
    post:
      operationId: logoutTherapist
      responses:
        "200":
          description: OK
      tags:
      - patient-controller
      x-accepts: application/json
  /patients/login:
    post:
      operationId: loginTherapist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginPatientDTO'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PatientOutputDTO'
          description: OK
      tags:
      - patient-controller
      x-content-type: application/json
      x-accepts: '*/*'
  /patients/journal-entry-conversation/{conversationId}/messages:
    get:
      operationId: getAllMessages
      parameters:
      - explode: false
        in: path
        name: conversationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JournalConversationOutputDTO'
          description: OK
      tags:
      - journal-entry-conversation-controller
      x-accepts: '*/*'
    post:
      operationId: sendMessage
      parameters:
      - explode: false
        in: path
        name: conversationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJournalMessageDTO'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MessageOutputDTO'
          description: OK
      tags:
      - journal-entry-conversation-controller
      x-content-type: application/json
      x-accepts: '*/*'
  /patients/journal-entries:
    get:
      operationId: listAll
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/GetAllJournalEntriesDTO'
                type: array
          description: OK
      tags:
      - journal-entry-controller
      x-accepts: '*/*'
    post:
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalEntryRequestDTO'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JournalEntryOutputDTO'
          description: Created
      tags:
      - journal-entry-controller
      x-content-type: application/json
      x-accepts: '*/*'
  /patients/exercises/{exerciseId}/start:
    post:
      operationId: startExercise
      parameters:
      - explode: false
        in: path
        name: exerciseId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExerciseStartOutputDTO'
          description: OK
      tags:
      - exercise-controller
      x-accepts: '*/*'
  /patients/exercises/{exerciseId}/exercise-completed:
    post:
      operationId: postExerciseFeedback
      parameters:
      - explode: false
        in: path
        name: exerciseId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseInformationInputDTO'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - exercise-controller
      x-content-type: application/json
      x-accepts: application/json
  /patients/exercise-conversation/{conversationId}/messages:
    get:
      operationId: getAllMessages_2
      parameters:
      - explode: false
        in: path
        name: conversationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompleteExerciseConversationOutputDTO'
          description: OK
      tags:
      - exercise-conversation-controller
      x-accepts: '*/*'
    post:
      operationId: sendMessage_1
      parameters:
      - explode: false
        in: path
        name: conversationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMessageDTO'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MessageOutputDTO'
          description: OK
      tags:
      - exercise-conversation-controller
      x-content-type: application/json
      x-accepts: '*/*'
  /patients/document-conversation/{conversationId}/messages:
    get:
      operationId: getAllMessages_4
      parameters:
      - explode: false
        in: path
        name: conversationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentConversationOutputDTO'
          description: OK
      tags:
      - document-conversation-controller
      x-accepts: '*/*'
    post:
      operationId: sendMessage_2
      parameters:
      - explode: false
        in: path
        name: conversationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMessageDTO'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MessageOutputDTO'
          description: OK
      tags:
      - document-conversation-controller
      x-content-type: application/json
      x-accepts: '*/*'
  /patients/conversations:
    get:
      operationId: getConversationNames
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/NameConversationOutputDTO'
                type: array
          description: OK
      tags:
      - conversation-controller
      x-accepts: '*/*'
    post:
      operationId: createConversation
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateConversationOutputDTO'
          description: Created
      tags:
      - conversation-controller
      x-accepts: '*/*'
  /patients/conversations/messages/{conversationId}:
    get:
      operationId: getAllMessages_5
      parameters:
      - explode: false
        in: path
        name: conversationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompleteConversationOutputDTO'
          description: OK
      tags:
      - conversation-controller
      x-accepts: '*/*'
    post:
      operationId: sendMessage_3
      parameters:
      - explode: false
        in: path
        name: conversationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMessageDTO'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MessageOutputDTO'
          description: OK
      tags:
      - conversation-controller
      x-content-type: application/json
      x-accepts: '*/*'
  /coach/patients/{patientId}/meetings:
    get:
      operationId: listMeetings_1
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/MeetingOutputDTO'
                type: array
          description: OK
      security:
      - X-Coach-Key: []
      tags:
      - coach-meeting-controller
      x-accepts: '*/*'
    post:
      operationId: createMeeting_1
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMeetingDTO'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MeetingOutputDTO'
          description: Created
      security:
      - X-Coach-Key: []
      tags:
      - coach-meeting-controller
      x-content-type: application/json
      x-accepts: '*/*'
  /coach/patients/{patientId}/exercises:
    get:
      operationId: getAllExercises
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ExercisesOverviewOutputDTO'
                type: array
          description: OK
      security:
      - X-Coach-Key: []
      tags:
      - coach-exercise-controller
      x-accepts: '*/*'
    post:
      operationId: createExercise
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseInputDTO'
        required: true
      responses:
        "201":
          description: Created
      security:
      - X-Coach-Key: []
      tags:
      - coach-exercise-controller
      x-content-type: application/json
      x-accepts: application/json
  /coach/patients/{patientId}/exercises/{exerciseId}/exercise-components:
    get:
      operationId: getAllExerciseComponents
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: exerciseId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ExerciseComponentOverviewOutputDTO'
                type: array
          description: OK
      security:
      - X-Coach-Key: []
      tags:
      - coach-exercise-controller
      x-accepts: '*/*'
    post:
      operationId: createExerciseComponent
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: exerciseId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseComponentInputDTO'
        required: true
      responses:
        "201":
          description: Created
      security:
      - X-Coach-Key: []
      tags:
      - coach-exercise-controller
      x-content-type: application/json
      x-accepts: application/json
  /coach/patients/{patientId}/documents:
    get:
      operationId: list_1
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/DocumentOverviewDTO'
                type: array
          description: OK
      security:
      - X-Coach-Key: []
      tags:
      - coach-document-controller
      x-accepts: '*/*'
    post:
      operationId: uploadAndShare
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadAndShare_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentOverviewDTO'
          description: Created
      security:
      - X-Coach-Key: []
      tags:
      - coach-document-controller
      x-content-type: multipart/form-data
      x-accepts: application/json
  /coach/patients/register:
    post:
      operationId: registerPatient_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePatientDTO'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PatientOutputDTO'
          description: Created
      security:
      - X-Coach-Key: []
      tags:
      - coach-patient-controller
      x-content-type: application/json
      x-accepts: '*/*'
  /patients/{patientId}/psychological-tests:
    get:
      operationId: getPsychologicalTestNames
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/PsychologicalTestNameAndPatientIdOutputDTO'
                type: array
          description: OK
      tags:
      - psychological-test-controller
      x-accepts: '*/*'
  /patients/{patientId}/psychological-tests/{psychologicalTestName}:
    get:
      operationId: getPsychologicalTestResults
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: psychologicalTestName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/PsychologicalTestOutputDTO'
                type: array
          description: OK
      tags:
      - psychological-test-controller
      x-accepts: '*/*'
  /patients/me:
    get:
      operationId: getCurrentlyLoggedInPatient
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PatientOutputDTO'
          description: OK
      tags:
      - patient-controller
      x-accepts: '*/*'
  /patients/journal-entries/{entryId}/chatbot:
    get:
      operationId: getAllMessages_1
      parameters:
      - explode: false
        in: path
        name: entryId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JournalChatbotOutputDTO'
          description: OK
      tags:
      - journal-entry-controller
      x-accepts: '*/*'
  /patients/journal-entries/tags:
    get:
      operationId: getAllTags
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
                uniqueItems: true
          description: OK
      tags:
      - journal-entry-controller
      x-accepts: '*/*'
  /patients/exercises:
    get:
      operationId: getExerciseOverview
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ExercisesOverviewOutputDTO'
                type: array
          description: OK
      tags:
      - exercise-controller
      x-accepts: '*/*'
  /patients/exercises/{exerciseId}:
    get:
      operationId: getOneExerciseOverview
      parameters:
      - explode: false
        in: path
        name: exerciseId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ExecutionOverviewOutputDTO'
                type: array
          description: OK
      tags:
      - exercise-controller
      x-accepts: '*/*'
  /patients/exercises/{exerciseId}/execution-information/{exerciseExecutionId}:
    get:
      operationId: getExerciseExecution
      parameters:
      - explode: false
        in: path
        name: exerciseId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: exerciseExecutionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExerciseOutputDTO'
          description: OK
      tags:
      - exercise-controller
      x-accepts: '*/*'
  /patients/exercises/{exerciseId}/chatbot:
    get:
      operationId: getExerciseChatbot
      parameters:
      - explode: false
        in: path
        name: exerciseId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExerciseChatbotOutputDTO'
          description: OK
      tags:
      - exercise-controller
      x-accepts: '*/*'
  /patients/documents:
    get:
      operationId: list
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/DocumentOverviewDTO'
                type: array
          description: OK
      tags:
      - document-controller
      x-accepts: '*/*'
  /patients/documents/{documentId}:
    get:
      operationId: download
      parameters:
      - explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: The raw file bytes
        "404":
          content:
            application/octet-stream:
              schema:
                items:
                  format: byte
                  type: string
                type: array
          description: Document not found
      summary: Download a patient’s document
      tags:
      - document-controller
      x-accepts: application/octet-stream
  /patients/documents/{documentId}/chatbot:
    get:
      operationId: getAllMessages_3
      parameters:
      - explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentChatbotOutputDTO'
          description: OK
      tags:
      - document-controller
      x-accepts: '*/*'
  /patients/dashboard/psychological-tests:
    get:
      operationId: getPsychologicalTestsOverview
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/PsychologicalTestsOverviewOutputDTO'
                type: array
          description: OK
      tags:
      - dashboard-controller
      x-accepts: '*/*'
  /patients/dashboard/exercises:
    get:
      operationId: getExerciseOverview_1
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ExercisesOverviewOutputDTO'
                type: array
          description: OK
      tags:
      - dashboard-controller
      x-accepts: '*/*'
  /coach/patients/{patientId}/psychological-tests:
    get:
      operationId: getPsychologicalTestNames_1
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/PsychologicalTestNameOutputDTO'
                type: array
          description: OK
      security:
      - X-Coach-Key: []
      tags:
      - coach-psychological-test-controller
      x-accepts: '*/*'
  /coach/patients/{patientId}/psychological-tests/available-tests:
    get:
      operationId: getAvailablePsychologicalTestNames
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/PsychologicalTestNameOutputDTO'
                type: array
          description: OK
      security:
      - X-Coach-Key: []
      tags:
      - coach-psychological-test-controller
      x-accepts: '*/*'
  /coach/patients/{patientId}/journal-entries:
    get:
      operationId: listAll_1
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/CoachGetAllJournalEntriesDTO'
                type: array
          description: OK
      security:
      - X-Coach-Key: []
      tags:
      - coach-journal-entry-controller
      x-accepts: '*/*'
  /coach/patients/{patientId}/journal-entries/{entryId}:
    get:
      operationId: getOne_1
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: entryId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CoachJournalEntryOutputDTO'
          description: OK
      security:
      - X-Coach-Key: []
      tags:
      - coach-journal-entry-controller
      x-accepts: '*/*'
  /coach/patients/{patientId}/documents/{documentId}:
    delete:
      operationId: deleteDocument
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - X-Coach-Key: []
      tags:
      - coach-document-controller
      x-accepts: application/json
    get:
      operationId: download_1
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  format: byte
                  type: string
                type: array
          description: OK
      security:
      - X-Coach-Key: []
      tags:
      - coach-document-controller
      x-accepts: '*/*'
  /coach/patients/{patientId}/chatbot-summary:
    get:
      operationId: getConversationSummary
      parameters:
      - explode: true
        in: query
        name: getConversationSummaryInputDTO
        required: true
        schema:
          $ref: '#/components/schemas/GetConversationSummaryInputDTO'
        style: form
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "409":
          content:
            '*/*':
              schema:
                type: string
          description: Conflict
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConversationSummaryOutputDTO'
          description: OK
      security:
      - X-Coach-Key: []
      tags:
      - coach-chatbot-controller
      x-accepts: '*/*'
  /:
    get:
      operationId: helloWorld
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
      tags:
      - patient-app-application
      x-accepts: text/plain
  /patients/journal-entry-conversation/{conversationId}:
    delete:
      operationId: deleteJournalChat
      parameters:
      - explode: false
        in: path
        name: conversationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      tags:
      - journal-entry-conversation-controller
      x-accepts: application/json
  /patients/exercise-conversation/{conversationId}:
    delete:
      operationId: deleteExerciseChat
      parameters:
      - explode: false
        in: path
        name: conversationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      tags:
      - exercise-conversation-controller
      x-accepts: application/json
  /patients/document-conversation/{conversationId}:
    delete:
      operationId: deleteDocumentChat
      parameters:
      - explode: false
        in: path
        name: conversationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      tags:
      - document-conversation-controller
      x-accepts: application/json
  /coach/patients/{patientId}:
    delete:
      operationId: deletePatient
      parameters:
      - explode: false
        in: path
        name: patientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - X-Coach-Key: []
      tags:
      - coach-patient-controller
      x-accepts: application/json
components:
  schemas:
    ChangePasswordDTO:
      properties:
        currentPassword:
          type: string
        newPassword:
          maxLength: 2147483647
          minLength: 8
          pattern: "^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d).*$"
          type: string
      required:
      - currentPassword
      - newPassword
      type: object
    PutOnboardedDTO:
      properties:
        onboarded:
          type: boolean
      type: object
    PutNameDTO:
      properties:
        name:
          type: string
      type: object
    UpdateMeetingDTO:
      properties:
        startAt:
          format: date-time
          type: string
        endAt:
          format: date-time
          type: string
        location:
          type: string
        meetingStatus:
          enum:
          - PENDING
          - CONFIRMED
          - CANCELLED
          type: string
      type: object
    MeetingOutputDTO:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        meetingStatus: PENDING
        patientId: patientId
        location: location
        id: id
        endAt: 2000-01-23T04:56:07.000+00:00
        startAt: 2000-01-23T04:56:07.000+00:00
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        patientId:
          type: string
        startAt:
          format: date-time
          type: string
        endAt:
          format: date-time
          type: string
        location:
          type: string
        meetingStatus:
          enum:
          - PENDING
          - CONFIRMED
          - CANCELLED
          type: string
      type: object
    PutLanguageDTO:
      properties:
        language:
          type: string
      type: object
    JournalEntryRequestDTO:
      properties:
        title:
          maxLength: 255
          minLength: 0
          type: string
        content:
          type: string
        tags:
          items:
            type: string
          type: array
          uniqueItems: true
        sharedWithTherapist:
          type: boolean
        aiAccessAllowed:
          type: boolean
      required:
      - content
      - title
      type: object
    JournalEntryOutputDTO:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        aiAccessAllowed: true
        sharedWithTherapist: true
        id: id
        title: title
        content: content
        updatedAt: 2000-01-23T04:56:07.000+00:00
        tags:
        - tags
        - tags
      properties:
        id:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        title:
          type: string
        content:
          type: string
        tags:
          items:
            type: string
          type: array
          uniqueItems: true
        sharedWithTherapist:
          type: boolean
        aiAccessAllowed:
          type: boolean
      type: object
    ExerciseComponentResultInputDTO:
      properties:
        exerciseExecutionId:
          type: string
        userInput:
          type: string
      type: object
    ExerciseCompletionNameInputDTO:
      properties:
        exerciseExecutionId:
          type: string
        executionTitle:
          type: string
      type: object
    PutSharingDTO:
      properties:
        shareWithCoach:
          type: boolean
        shareWithAi:
          type: boolean
      type: object
    PutConversationNameDTO:
      properties:
        conversationName:
          type: string
      type: object
    PutAvatarDTO:
      properties:
        chatBotAvatar:
          enum:
          - ANIMALISTIC
          - BLOB
          - CRYSTAL
          - HUMANISTIC
          - NONE
          - PLANT
          - ROBOTIC
          - NEURALNETWORK
          type: string
      required:
      - chatBotAvatar
      type: object
    PsychologicalTestAssignmentInputDTO:
      properties:
        patientId:
          type: string
        testName:
          type: string
        exerciseStart:
          format: date-time
          type: string
        exerciseEnd:
          format: date-time
          type: string
        isPaused:
          type: boolean
        doEveryNDays:
          format: int32
          type: integer
      type: object
    ExerciseComponentInputDTO:
      properties:
        id:
          type: string
        exerciseComponentType:
          enum:
          - TEXT
          - INPUT_FIELD_PRIVATE
          - INPUT_FIELD_SHARED
          - FILE
          - IMAGE
          - YOUTUBE_VIDEO
          type: string
        exerciseComponentDescription:
          type: string
        fileName:
          type: string
        fileType:
          type: string
        fileData:
          description: File data encoded in Base64
          format: byte
          type: string
        orderNumber:
          format: int32
          type: integer
      type: object
    ExerciseUpdateInputDTO:
      properties:
        exerciseTitle:
          type: string
        exerciseDescription:
          type: string
        exerciseExplanation:
          type: string
        exerciseStart:
          format: date-time
          type: string
        exerciseEnd:
          format: date-time
          type: string
        isPaused:
          type: boolean
        doEveryNDays:
          format: int32
          type: integer
        exerciseComponents:
          items:
            $ref: '#/components/schemas/ExerciseComponentInputDTO'
          type: array
      type: object
    ExerciseComponentUpdateInputDTO:
      properties:
        id:
          type: string
        exerciseComponentType:
          enum:
          - TEXT
          - INPUT_FIELD_PRIVATE
          - INPUT_FIELD_SHARED
          - FILE
          - IMAGE
          - YOUTUBE_VIDEO
          type: string
        exerciseComponentDescription:
          type: string
        fileName:
          type: string
        fileType:
          type: string
        fileData:
          description: File data encoded in Base64
          format: byte
          type: string
        orderNumber:
          format: int32
          type: integer
      type: object
    UpdateChatbotDTO:
      properties:
        id:
          type: string
        chatbotRole:
          type: string
        chatbotTone:
          type: string
        welcomeMessage:
          type: string
        chatbotContext:
          type: string
        active:
          type: boolean
      type: object
    PsychologicalTestInputDTO:
      properties:
        name:
          type: string
        description:
          type: string
        questions:
          items:
            $ref: '#/components/schemas/PsychologicalTestQuestionInputDTO'
          type: array
      type: object
    PsychologicalTestQuestionInputDTO:
      properties:
        question:
          type: string
        score:
          format: int32
          type: integer
      type: object
    CreatePatientDTO:
      properties:
        id:
          type: string
        email:
          type: string
        password:
          maxLength: 2147483647
          minLength: 8
          pattern: "^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d).*$"
          type: string
        coachAccessKey:
          type: string
      required:
      - coachAccessKey
      - password
      type: object
    PatientOutputDTO:
      example:
        onboarded: true
        name: name
        description: description
        language: language
        id: id
        email: email
        chatBotAvatar: ANIMALISTIC
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        email:
          type: string
        language:
          type: string
        onboarded:
          type: boolean
        chatBotAvatar:
          enum:
          - ANIMALISTIC
          - BLOB
          - CRYSTAL
          - HUMANISTIC
          - NONE
          - PLANT
          - ROBOTIC
          - NEURALNETWORK
          type: string
      type: object
    CreateMeetingDTO:
      properties:
        id:
          type: string
        startAt:
          format: date-time
          type: string
        endAt:
          format: date-time
          type: string
        meetingStatus:
          enum:
          - PENDING
          - CONFIRMED
          - CANCELLED
          type: string
        location:
          type: string
      type: object
    LoginPatientDTO:
      properties:
        email:
          type: string
        password:
          type: string
      type: object
    CreateJournalMessageDTO:
      properties:
        message:
          type: string
        journalEntryTitle:
          type: string
        journalEntryContent:
          type: string
      type: object
    MessageOutputDTO:
      example:
        requestMessage: requestMessage
        conversationId: conversationId
        id: id
        responseMessage: responseMessage
        timestamp: timestamp
      properties:
        timestamp:
          type: string
        id:
          type: string
        conversationId:
          type: string
        responseMessage:
          type: string
        requestMessage:
          type: string
      type: object
    ExerciseStartOutputDTO:
      example:
        exerciseExecutionId: exerciseExecutionId
      properties:
        exerciseExecutionId:
          type: string
      type: object
    ExerciseInformationInputDTO:
      properties:
        exerciseExecutionId:
          type: string
        startTime:
          format: date-time
          type: string
        endTime:
          format: date-time
          type: string
        feedback:
          type: string
        moodsBefore:
          items:
            $ref: '#/components/schemas/ExerciseMoodInputDTO'
          type: array
        moodsAfter:
          items:
            $ref: '#/components/schemas/ExerciseMoodInputDTO'
          type: array
      type: object
    ExerciseMoodInputDTO:
      properties:
        moodName:
          type: string
        moodScore:
          format: int32
          type: integer
      type: object
    CreateMessageDTO:
      properties:
        message:
          type: string
      type: object
    CreateConversationOutputDTO:
      example:
        welcomeMessage: welcomeMessage
        id: id
        chatBotAvatar: ANIMALISTIC
      properties:
        id:
          type: string
        welcomeMessage:
          type: string
        chatBotAvatar:
          enum:
          - ANIMALISTIC
          - BLOB
          - CRYSTAL
          - HUMANISTIC
          - NONE
          - PLANT
          - ROBOTIC
          - NEURALNETWORK
          type: string
      type: object
    ExerciseInputDTO:
      properties:
        id:
          type: string
        exerciseTitle:
          type: string
        exerciseDescription:
          type: string
        exerciseExplanation:
          type: string
        exerciseStart:
          format: date-time
          type: string
        exerciseEnd:
          format: date-time
          type: string
        isPaused:
          type: boolean
        doEveryNDays:
          format: int32
          type: integer
        exerciseComponents:
          items:
            $ref: '#/components/schemas/ExerciseComponentInputDTO'
          type: array
      type: object
    DocumentOverviewDTO:
      example:
        filename: filename
        uploadedAt: 2000-01-23T04:56:07.000+00:00
        id: id
        contentType: contentType
      properties:
        id:
          type: string
        filename:
          type: string
        contentType:
          type: string
        uploadedAt:
          format: date-time
          type: string
      type: object
    CreateChatbotDTO:
      properties:
        chatbotRole:
          type: string
        chatbotTone:
          type: string
        welcomeMessage:
          type: string
      type: object
    PsychologicalTestNameAndPatientIdOutputDTO:
      example:
        patientId: patientId
        name: name
      properties:
        name:
          type: string
        patientId:
          type: string
      type: object
    PsychologicalTestOutputDTO:
      example:
        completedAt: 2000-01-23T04:56:07.000+00:00
        patientId: patientId
        name: name
        questions:
        - score: 0
          question: question
        - score: 0
          question: question
        description: description
      properties:
        name:
          type: string
        description:
          type: string
        patientId:
          type: string
        completedAt:
          format: date-time
          type: string
        questions:
          items:
            $ref: '#/components/schemas/PsychologicalTestQuestionOutputDTO'
          type: array
      type: object
    PsychologicalTestQuestionOutputDTO:
      example:
        score: 0
        question: question
      properties:
        question:
          type: string
        score:
          format: int32
          type: integer
      type: object
    JournalConversationOutputDTO:
      example:
        name: name
        messages:
        - requestMessage: requestMessage
          conversationId: conversationId
          id: id
          responseMessage: responseMessage
          timestamp: timestamp
        - requestMessage: requestMessage
          conversationId: conversationId
          id: id
          responseMessage: responseMessage
          timestamp: timestamp
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        messages:
          items:
            $ref: '#/components/schemas/MessageOutputDTO'
          type: array
      type: object
    GetAllJournalEntriesDTO:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        aiAccessAllowed: true
        sharedWithTherapist: true
        id: id
        title: title
        updatedAt: 2000-01-23T04:56:07.000+00:00
        tags:
        - tags
        - tags
      properties:
        id:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        title:
          type: string
        tags:
          items:
            type: string
          type: array
          uniqueItems: true
        sharedWithTherapist:
          type: boolean
        aiAccessAllowed:
          type: boolean
      type: object
    JournalChatbotOutputDTO:
      example:
        name: name
        id: id
      properties:
        name:
          type: string
        id:
          type: string
      type: object
    ExercisesOverviewOutputDTO:
      example:
        id: id
        exerciseTitle: exerciseTitle
      properties:
        id:
          type: string
        exerciseTitle:
          type: string
      type: object
    ExecutionOverviewOutputDTO:
      example:
        executionTitle: executionTitle
        exerciseExecutionId: exerciseExecutionId
      properties:
        executionTitle:
          type: string
        exerciseExecutionId:
          type: string
      type: object
    ExerciseComponentOutputDTO:
      example:
        fileName: fileName
        orderNumber: 0
        exerciseComponentDescription: exerciseComponentDescription
        fileData: fileData
        id: id
        userInput: userInput
        fileType: fileType
        exerciseComponentType: TEXT
      properties:
        id:
          type: string
        exerciseComponentType:
          enum:
          - TEXT
          - INPUT_FIELD_PRIVATE
          - INPUT_FIELD_SHARED
          - FILE
          - IMAGE
          - YOUTUBE_VIDEO
          type: string
        exerciseComponentDescription:
          type: string
        userInput:
          type: string
        fileName:
          type: string
        fileType:
          type: string
        fileData:
          description: File data encoded in Base64
          format: byte
          type: string
        orderNumber:
          format: int32
          type: integer
      type: object
    ExerciseOutputDTO:
      example:
        exerciseDescription: exerciseDescription
        exerciseComponents:
        - fileName: fileName
          orderNumber: 0
          exerciseComponentDescription: exerciseComponentDescription
          fileData: fileData
          id: id
          userInput: userInput
          fileType: fileType
          exerciseComponentType: TEXT
        - fileName: fileName
          orderNumber: 0
          exerciseComponentDescription: exerciseComponentDescription
          fileData: fileData
          id: id
          userInput: userInput
          fileType: fileType
          exerciseComponentType: TEXT
        exerciseExecutionId: exerciseExecutionId
        exerciseTitle: exerciseTitle
      properties:
        exerciseExecutionId:
          type: string
        exerciseTitle:
          type: string
        exerciseDescription:
          type: string
        exerciseComponents:
          items:
            $ref: '#/components/schemas/ExerciseComponentOutputDTO'
          type: array
      type: object
    ExerciseChatbotOutputDTO:
      example:
        welcomeMessage: welcomeMessage
        name: name
        id: id
      properties:
        name:
          type: string
        id:
          type: string
        welcomeMessage:
          type: string
      type: object
    CompleteExerciseConversationOutputDTO:
      example:
        name: name
        messages:
        - requestMessage: requestMessage
          conversationId: conversationId
          id: id
          responseMessage: responseMessage
          timestamp: timestamp
        - requestMessage: requestMessage
          conversationId: conversationId
          id: id
          responseMessage: responseMessage
          timestamp: timestamp
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        messages:
          items:
            $ref: '#/components/schemas/MessageOutputDTO'
          type: array
      type: object
    DocumentChatbotOutputDTO:
      example:
        welcomeMessage: welcomeMessage
        name: name
        id: id
      properties:
        name:
          type: string
        id:
          type: string
        welcomeMessage:
          type: string
      type: object
    DocumentConversationOutputDTO:
      example:
        name: name
        messages:
        - requestMessage: requestMessage
          conversationId: conversationId
          id: id
          responseMessage: responseMessage
          timestamp: timestamp
        - requestMessage: requestMessage
          conversationId: conversationId
          id: id
          responseMessage: responseMessage
          timestamp: timestamp
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        messages:
          items:
            $ref: '#/components/schemas/MessageOutputDTO'
          type: array
      type: object
    PsychologicalTestsOverviewOutputDTO:
      example:
        id: id
        testName: testName
      properties:
        id:
          type: string
        testName:
          type: string
      type: object
    NameConversationOutputDTO:
      example:
        chatbotIcon: chatbotIcon
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        chatbotIcon:
          type: string
      type: object
    CompleteConversationOutputDTO:
      example:
        shareWithAi: true
        welcomeMessage: welcomeMessage
        name: name
        messages:
        - requestMessage: requestMessage
          conversationId: conversationId
          id: id
          responseMessage: responseMessage
          timestamp: timestamp
        - requestMessage: requestMessage
          conversationId: conversationId
          id: id
          responseMessage: responseMessage
          timestamp: timestamp
        id: id
        shareWithCoach: true
        chatBotAvatar: ANIMALISTIC
      properties:
        id:
          type: string
        name:
          type: string
        welcomeMessage:
          type: string
        shareWithCoach:
          type: boolean
        shareWithAi:
          type: boolean
        messages:
          items:
            $ref: '#/components/schemas/MessageOutputDTO'
          type: array
        chatBotAvatar:
          enum:
          - ANIMALISTIC
          - BLOB
          - CRYSTAL
          - HUMANISTIC
          - NONE
          - PLANT
          - ROBOTIC
          - NEURALNETWORK
          type: string
      type: object
    PsychologicalTestNameOutputDTO:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    CoachGetAllJournalEntriesDTO:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        id: id
        title: title
        updatedAt: 2000-01-23T04:56:07.000+00:00
        tags:
        - tags
        - tags
      properties:
        id:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        title:
          type: string
        tags:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    CoachJournalEntryOutputDTO:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        id: id
        title: title
        content: content
        updatedAt: 2000-01-23T04:56:07.000+00:00
        tags:
        - tags
        - tags
      properties:
        id:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        title:
          type: string
        content:
          type: string
        tags:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    ExerciseInformationOutputDTO:
      example:
        feedback: feedback
        moodsAfter:
        - moodName: moodName
          moodScore: 0
        - moodName: moodName
          moodScore: 0
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        moodsBefore:
        - moodName: moodName
          moodScore: 0
        - moodName: moodName
          moodScore: 0
      properties:
        startTime:
          format: date-time
          type: string
        endTime:
          format: date-time
          type: string
        feedback:
          type: string
        moodsBefore:
          items:
            $ref: '#/components/schemas/ExerciseMoodOutputDTO'
          type: array
        moodsAfter:
          items:
            $ref: '#/components/schemas/ExerciseMoodOutputDTO'
          type: array
      type: object
    ExerciseMoodOutputDTO:
      example:
        moodName: moodName
        moodScore: 0
      properties:
        moodName:
          type: string
        moodScore:
          format: int32
          type: integer
      type: object
    ExerciseComponentOverviewOutputDTO:
      example:
        id: id
      properties:
        id:
          type: string
      type: object
    ChatbotConfigurationOutputDTO:
      example:
        chatbotTone: chatbotTone
        chatbotRole: chatbotRole
        welcomeMessage: welcomeMessage
        active: true
        id: id
      properties:
        id:
          type: string
        chatbotRole:
          type: string
        chatbotTone:
          type: string
        welcomeMessage:
          type: string
        active:
          type: boolean
      type: object
    GetConversationSummaryInputDTO:
      properties:
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
      required:
      - end
      - start
      type: object
    ConversationSummaryOutputDTO:
      example:
        conversationSummary: conversationSummary
      properties:
        conversationSummary:
          type: string
      type: object
    uploadAndShare_request:
      properties:
        file:
          format: binary
          type: string
      required:
      - file
      type: object
  securitySchemes:
    X-Coach-Key:
      description: Your coach’s API key
      in: header
      name: X-Coach-Key
      type: apiKey

