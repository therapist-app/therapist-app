/*
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.uzh.ifi.imrg.generated.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PatientOutputDTOPatientAPI
 */
@JsonPropertyOrder({
  PatientOutputDTOPatientAPI.JSON_PROPERTY_ID,
  PatientOutputDTOPatientAPI.JSON_PROPERTY_NAME,
  PatientOutputDTOPatientAPI.JSON_PROPERTY_DESCRIPTION,
  PatientOutputDTOPatientAPI.JSON_PROPERTY_EMAIL,
  PatientOutputDTOPatientAPI.JSON_PROPERTY_LANGUAGE,
  PatientOutputDTOPatientAPI.JSON_PROPERTY_ONBOARDED,
  PatientOutputDTOPatientAPI.JSON_PROPERTY_CHAT_BOT_AVATAR
})
@JsonTypeName("PatientOutputDTO")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class PatientOutputDTOPatientAPI {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_LANGUAGE = "language";
  private String language;

  public static final String JSON_PROPERTY_ONBOARDED = "onboarded";
  private Boolean onboarded;

  /**
   * Gets or Sets chatBotAvatar
   */
  public enum ChatBotAvatarEnum {
    ANIMALISTIC("ANIMALISTIC"),
    
    BLOB("BLOB"),
    
    CRYSTAL("CRYSTAL"),
    
    HUMANISTIC("HUMANISTIC"),
    
    NONE("NONE"),
    
    PLANT("PLANT"),
    
    ROBOTIC("ROBOTIC"),
    
    NEURALNETWORK("NEURALNETWORK");

    private String value;

    ChatBotAvatarEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ChatBotAvatarEnum fromValue(String value) {
      for (ChatBotAvatarEnum b : ChatBotAvatarEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CHAT_BOT_AVATAR = "chatBotAvatar";
  private ChatBotAvatarEnum chatBotAvatar;

  public PatientOutputDTOPatientAPI() {
  }

  public PatientOutputDTOPatientAPI id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public PatientOutputDTOPatientAPI name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public PatientOutputDTOPatientAPI description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public PatientOutputDTOPatientAPI email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(String email) {
    this.email = email;
  }


  public PatientOutputDTOPatientAPI language(String language) {
    
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLanguage() {
    return language;
  }


  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLanguage(String language) {
    this.language = language;
  }


  public PatientOutputDTOPatientAPI onboarded(Boolean onboarded) {
    
    this.onboarded = onboarded;
    return this;
  }

   /**
   * Get onboarded
   * @return onboarded
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ONBOARDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOnboarded() {
    return onboarded;
  }


  @JsonProperty(JSON_PROPERTY_ONBOARDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOnboarded(Boolean onboarded) {
    this.onboarded = onboarded;
  }


  public PatientOutputDTOPatientAPI chatBotAvatar(ChatBotAvatarEnum chatBotAvatar) {
    
    this.chatBotAvatar = chatBotAvatar;
    return this;
  }

   /**
   * Get chatBotAvatar
   * @return chatBotAvatar
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHAT_BOT_AVATAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ChatBotAvatarEnum getChatBotAvatar() {
    return chatBotAvatar;
  }


  @JsonProperty(JSON_PROPERTY_CHAT_BOT_AVATAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChatBotAvatar(ChatBotAvatarEnum chatBotAvatar) {
    this.chatBotAvatar = chatBotAvatar;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PatientOutputDTOPatientAPI patientOutputDTO = (PatientOutputDTOPatientAPI) o;
    return Objects.equals(this.id, patientOutputDTO.id) &&
        Objects.equals(this.name, patientOutputDTO.name) &&
        Objects.equals(this.description, patientOutputDTO.description) &&
        Objects.equals(this.email, patientOutputDTO.email) &&
        Objects.equals(this.language, patientOutputDTO.language) &&
        Objects.equals(this.onboarded, patientOutputDTO.onboarded) &&
        Objects.equals(this.chatBotAvatar, patientOutputDTO.chatBotAvatar);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, email, language, onboarded, chatBotAvatar);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PatientOutputDTOPatientAPI {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    onboarded: ").append(toIndentedString(onboarded)).append("\n");
    sb.append("    chatBotAvatar: ").append(toIndentedString(chatBotAvatar)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

