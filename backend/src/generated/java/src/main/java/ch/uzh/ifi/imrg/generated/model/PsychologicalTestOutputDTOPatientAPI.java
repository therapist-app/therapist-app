/*
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.uzh.ifi.imrg.generated.model;

import java.util.Objects;
import java.util.Arrays;
import ch.uzh.ifi.imrg.generated.model.PsychologicalTestQuestionOutputDTOPatientAPI;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.Instant;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PsychologicalTestOutputDTOPatientAPI
 */
@JsonPropertyOrder({
  PsychologicalTestOutputDTOPatientAPI.JSON_PROPERTY_NAME,
  PsychologicalTestOutputDTOPatientAPI.JSON_PROPERTY_DESCRIPTION,
  PsychologicalTestOutputDTOPatientAPI.JSON_PROPERTY_PATIENT_ID,
  PsychologicalTestOutputDTOPatientAPI.JSON_PROPERTY_COMPLETED_AT,
  PsychologicalTestOutputDTOPatientAPI.JSON_PROPERTY_QUESTIONS
})
@JsonTypeName("PsychologicalTestOutputDTO")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class PsychologicalTestOutputDTOPatientAPI {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_PATIENT_ID = "patientId";
  private String patientId;

  public static final String JSON_PROPERTY_COMPLETED_AT = "completedAt";
  private Instant completedAt;

  public static final String JSON_PROPERTY_QUESTIONS = "questions";
  private List<PsychologicalTestQuestionOutputDTOPatientAPI> questions;

  public PsychologicalTestOutputDTOPatientAPI() {
  }

  public PsychologicalTestOutputDTOPatientAPI name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public PsychologicalTestOutputDTOPatientAPI description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public PsychologicalTestOutputDTOPatientAPI patientId(String patientId) {
    
    this.patientId = patientId;
    return this;
  }

   /**
   * Get patientId
   * @return patientId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PATIENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPatientId() {
    return patientId;
  }


  @JsonProperty(JSON_PROPERTY_PATIENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPatientId(String patientId) {
    this.patientId = patientId;
  }


  public PsychologicalTestOutputDTOPatientAPI completedAt(Instant completedAt) {
    
    this.completedAt = completedAt;
    return this;
  }

   /**
   * Get completedAt
   * @return completedAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPLETED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Instant getCompletedAt() {
    return completedAt;
  }


  @JsonProperty(JSON_PROPERTY_COMPLETED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompletedAt(Instant completedAt) {
    this.completedAt = completedAt;
  }


  public PsychologicalTestOutputDTOPatientAPI questions(List<PsychologicalTestQuestionOutputDTOPatientAPI> questions) {
    
    this.questions = questions;
    return this;
  }

  public PsychologicalTestOutputDTOPatientAPI addQuestionsItem(PsychologicalTestQuestionOutputDTOPatientAPI questionsItem) {
    if (this.questions == null) {
      this.questions = new ArrayList<>();
    }
    this.questions.add(questionsItem);
    return this;
  }

   /**
   * Get questions
   * @return questions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUESTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PsychologicalTestQuestionOutputDTOPatientAPI> getQuestions() {
    return questions;
  }


  @JsonProperty(JSON_PROPERTY_QUESTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuestions(List<PsychologicalTestQuestionOutputDTOPatientAPI> questions) {
    this.questions = questions;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PsychologicalTestOutputDTOPatientAPI psychologicalTestOutputDTO = (PsychologicalTestOutputDTOPatientAPI) o;
    return Objects.equals(this.name, psychologicalTestOutputDTO.name) &&
        Objects.equals(this.description, psychologicalTestOutputDTO.description) &&
        Objects.equals(this.patientId, psychologicalTestOutputDTO.patientId) &&
        Objects.equals(this.completedAt, psychologicalTestOutputDTO.completedAt) &&
        Objects.equals(this.questions, psychologicalTestOutputDTO.questions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, patientId, completedAt, questions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PsychologicalTestOutputDTOPatientAPI {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    patientId: ").append(toIndentedString(patientId)).append("\n");
    sb.append("    completedAt: ").append(toIndentedString(completedAt)).append("\n");
    sb.append("    questions: ").append(toIndentedString(questions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

