/*
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.uzh.ifi.imrg.generated.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.LinkedHashSet;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * JournalEntryRequestDTOPatientAPI
 */
@JsonPropertyOrder({
  JournalEntryRequestDTOPatientAPI.JSON_PROPERTY_TITLE,
  JournalEntryRequestDTOPatientAPI.JSON_PROPERTY_CONTENT,
  JournalEntryRequestDTOPatientAPI.JSON_PROPERTY_TAGS,
  JournalEntryRequestDTOPatientAPI.JSON_PROPERTY_SHARED_WITH_THERAPIST,
  JournalEntryRequestDTOPatientAPI.JSON_PROPERTY_AI_ACCESS_ALLOWED
})
@JsonTypeName("JournalEntryRequestDTO")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class JournalEntryRequestDTOPatientAPI {
  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_CONTENT = "content";
  private String content;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private Set<String> tags;

  public static final String JSON_PROPERTY_SHARED_WITH_THERAPIST = "sharedWithTherapist";
  private Boolean sharedWithTherapist;

  public static final String JSON_PROPERTY_AI_ACCESS_ALLOWED = "aiAccessAllowed";
  private Boolean aiAccessAllowed;

  public JournalEntryRequestDTOPatientAPI() {
  }

  public JournalEntryRequestDTOPatientAPI title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTitle(String title) {
    this.title = title;
  }


  public JournalEntryRequestDTOPatientAPI content(String content) {
    
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getContent() {
    return content;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContent(String content) {
    this.content = content;
  }


  public JournalEntryRequestDTOPatientAPI tags(Set<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public JournalEntryRequestDTOPatientAPI addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new LinkedHashSet<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getTags() {
    return tags;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(Set<String> tags) {
    this.tags = tags;
  }


  public JournalEntryRequestDTOPatientAPI sharedWithTherapist(Boolean sharedWithTherapist) {
    
    this.sharedWithTherapist = sharedWithTherapist;
    return this;
  }

   /**
   * Get sharedWithTherapist
   * @return sharedWithTherapist
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHARED_WITH_THERAPIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSharedWithTherapist() {
    return sharedWithTherapist;
  }


  @JsonProperty(JSON_PROPERTY_SHARED_WITH_THERAPIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSharedWithTherapist(Boolean sharedWithTherapist) {
    this.sharedWithTherapist = sharedWithTherapist;
  }


  public JournalEntryRequestDTOPatientAPI aiAccessAllowed(Boolean aiAccessAllowed) {
    
    this.aiAccessAllowed = aiAccessAllowed;
    return this;
  }

   /**
   * Get aiAccessAllowed
   * @return aiAccessAllowed
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AI_ACCESS_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAiAccessAllowed() {
    return aiAccessAllowed;
  }


  @JsonProperty(JSON_PROPERTY_AI_ACCESS_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAiAccessAllowed(Boolean aiAccessAllowed) {
    this.aiAccessAllowed = aiAccessAllowed;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JournalEntryRequestDTOPatientAPI journalEntryRequestDTO = (JournalEntryRequestDTOPatientAPI) o;
    return Objects.equals(this.title, journalEntryRequestDTO.title) &&
        Objects.equals(this.content, journalEntryRequestDTO.content) &&
        Objects.equals(this.tags, journalEntryRequestDTO.tags) &&
        Objects.equals(this.sharedWithTherapist, journalEntryRequestDTO.sharedWithTherapist) &&
        Objects.equals(this.aiAccessAllowed, journalEntryRequestDTO.aiAccessAllowed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, content, tags, sharedWithTherapist, aiAccessAllowed);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JournalEntryRequestDTOPatientAPI {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    sharedWithTherapist: ").append(toIndentedString(sharedWithTherapist)).append("\n");
    sb.append("    aiAccessAllowed: ").append(toIndentedString(aiAccessAllowed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

