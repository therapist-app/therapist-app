/*
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.uzh.ifi.imrg.generated.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ExercisesOverviewOutputDTOPatientAPI
 */
@JsonPropertyOrder({
  ExercisesOverviewOutputDTOPatientAPI.JSON_PROPERTY_ID,
  ExercisesOverviewOutputDTOPatientAPI.JSON_PROPERTY_NAME,
  ExercisesOverviewOutputDTOPatientAPI.JSON_PROPERTY_PICTURE_ID
})
@JsonTypeName("ExercisesOverviewOutputDTO")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class ExercisesOverviewOutputDTOPatientAPI {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PICTURE_ID = "pictureId";
  private String pictureId;

  public ExercisesOverviewOutputDTOPatientAPI() {
  }

  public ExercisesOverviewOutputDTOPatientAPI id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public ExercisesOverviewOutputDTOPatientAPI name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ExercisesOverviewOutputDTOPatientAPI pictureId(String pictureId) {
    
    this.pictureId = pictureId;
    return this;
  }

   /**
   * Get pictureId
   * @return pictureId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PICTURE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPictureId() {
    return pictureId;
  }


  @JsonProperty(JSON_PROPERTY_PICTURE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPictureId(String pictureId) {
    this.pictureId = pictureId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExercisesOverviewOutputDTOPatientAPI exercisesOverviewOutputDTO = (ExercisesOverviewOutputDTOPatientAPI) o;
    return Objects.equals(this.id, exercisesOverviewOutputDTO.id) &&
        Objects.equals(this.name, exercisesOverviewOutputDTO.name) &&
        Objects.equals(this.pictureId, exercisesOverviewOutputDTO.pictureId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, pictureId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExercisesOverviewOutputDTOPatientAPI {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pictureId: ").append(toIndentedString(pictureId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

