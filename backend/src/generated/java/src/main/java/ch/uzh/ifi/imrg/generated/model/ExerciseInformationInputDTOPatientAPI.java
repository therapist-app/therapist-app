/*
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.uzh.ifi.imrg.generated.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ExerciseInformationInputDTOPatientAPI
 */
@JsonPropertyOrder({
  ExerciseInformationInputDTOPatientAPI.JSON_PROPERTY_START_TIME,
  ExerciseInformationInputDTOPatientAPI.JSON_PROPERTY_END_TIME,
  ExerciseInformationInputDTOPatientAPI.JSON_PROPERTY_FEEDBACK
})
@JsonTypeName("ExerciseInformationInputDTO")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class ExerciseInformationInputDTOPatientAPI {
  public static final String JSON_PROPERTY_START_TIME = "startTime";
  private OffsetDateTime startTime;

  public static final String JSON_PROPERTY_END_TIME = "endTime";
  private OffsetDateTime endTime;

  public static final String JSON_PROPERTY_FEEDBACK = "feedback";
  private String feedback;

  public ExerciseInformationInputDTOPatientAPI() {
  }

  public ExerciseInformationInputDTOPatientAPI startTime(OffsetDateTime startTime) {
    
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getStartTime() {
    return startTime;
  }


  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public ExerciseInformationInputDTOPatientAPI endTime(OffsetDateTime endTime) {
    
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getEndTime() {
    return endTime;
  }


  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public ExerciseInformationInputDTOPatientAPI feedback(String feedback) {
    
    this.feedback = feedback;
    return this;
  }

   /**
   * Get feedback
   * @return feedback
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FEEDBACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFeedback() {
    return feedback;
  }


  @JsonProperty(JSON_PROPERTY_FEEDBACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFeedback(String feedback) {
    this.feedback = feedback;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExerciseInformationInputDTOPatientAPI exerciseInformationInputDTO = (ExerciseInformationInputDTOPatientAPI) o;
    return Objects.equals(this.startTime, exerciseInformationInputDTO.startTime) &&
        Objects.equals(this.endTime, exerciseInformationInputDTO.endTime) &&
        Objects.equals(this.feedback, exerciseInformationInputDTO.feedback);
  }

  @Override
  public int hashCode() {
    return Objects.hash(startTime, endTime, feedback);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExerciseInformationInputDTOPatientAPI {\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    feedback: ").append(toIndentedString(feedback)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

