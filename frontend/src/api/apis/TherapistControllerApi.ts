/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateTherapistDTO,
  LoginTherapistDTO,
  TherapistOutputDTO,
} from '../models/index';
import {
    CreateTherapistDTOFromJSON,
    CreateTherapistDTOToJSON,
    LoginTherapistDTOFromJSON,
    LoginTherapistDTOToJSON,
    TherapistOutputDTOFromJSON,
    TherapistOutputDTOToJSON,
} from '../models/index';

export interface CreateTherapistRequest {
    createTherapistDTO: CreateTherapistDTO;
}

export interface LoginTherapistRequest {
    loginTherapistDTO: LoginTherapistDTO;
}

/**
 * TherapistControllerApi - interface
 * 
 * @export
 * @interface TherapistControllerApiInterface
 */
export interface TherapistControllerApiInterface {
    /**
     * 
     * @param {CreateTherapistDTO} createTherapistDTO 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TherapistControllerApiInterface
     */
    createTherapistRaw(requestParameters: CreateTherapistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TherapistOutputDTO>>;

    /**
     */
    createTherapist(requestParameters: CreateTherapistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TherapistOutputDTO>;

    /**
     * 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TherapistControllerApiInterface
     */
    getCurrentlyLoggedInTherapistRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TherapistOutputDTO>>;

    /**
     */
    getCurrentlyLoggedInTherapist(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TherapistOutputDTO>;

    /**
     * 
     * @param {LoginTherapistDTO} loginTherapistDTO 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TherapistControllerApiInterface
     */
    loginTherapistRaw(requestParameters: LoginTherapistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TherapistOutputDTO>>;

    /**
     */
    loginTherapist(requestParameters: LoginTherapistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TherapistOutputDTO>;

    /**
     * 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TherapistControllerApiInterface
     */
    logoutTherapistRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     */
    logoutTherapist(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

}

/**
 * 
 */
export class TherapistControllerApi extends runtime.BaseAPI implements TherapistControllerApiInterface {

    /**
     */
    async createTherapistRaw(requestParameters: CreateTherapistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TherapistOutputDTO>> {
        if (requestParameters['createTherapistDTO'] == null) {
            throw new runtime.RequiredError(
                'createTherapistDTO',
                'Required parameter "createTherapistDTO" was null or undefined when calling createTherapist().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/therapists`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateTherapistDTOToJSON(requestParameters['createTherapistDTO']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TherapistOutputDTOFromJSON(jsonValue));
    }

    /**
     */
    async createTherapist(requestParameters: CreateTherapistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TherapistOutputDTO> {
        const response = await this.createTherapistRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getCurrentlyLoggedInTherapistRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TherapistOutputDTO>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/therapists/me`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TherapistOutputDTOFromJSON(jsonValue));
    }

    /**
     */
    async getCurrentlyLoggedInTherapist(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TherapistOutputDTO> {
        const response = await this.getCurrentlyLoggedInTherapistRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async loginTherapistRaw(requestParameters: LoginTherapistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TherapistOutputDTO>> {
        if (requestParameters['loginTherapistDTO'] == null) {
            throw new runtime.RequiredError(
                'loginTherapistDTO',
                'Required parameter "loginTherapistDTO" was null or undefined when calling loginTherapist().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/therapists/login`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: LoginTherapistDTOToJSON(requestParameters['loginTherapistDTO']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TherapistOutputDTOFromJSON(jsonValue));
    }

    /**
     */
    async loginTherapist(requestParameters: LoginTherapistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TherapistOutputDTO> {
        const response = await this.loginTherapistRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async logoutTherapistRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/therapists/logout`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async logoutTherapist(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.logoutTherapistRaw(initOverrides);
    }

}
