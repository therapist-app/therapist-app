/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreatePatientDTO,
  PatientOutputDTO,
} from '../models/index';
import {
    CreatePatientDTOFromJSON,
    CreatePatientDTOToJSON,
    PatientOutputDTOFromJSON,
    PatientOutputDTOToJSON,
} from '../models/index';

export interface CreatePatientForTherapistRequest {
    createPatientDTO: CreatePatientDTO;
}

export interface DeletePatientRequest {
    id: string;
}

export interface GetPatientsOfTherapistRequest {
    inputDTO: CreatePatientDTO;
}

/**
 * PatientControllerApi - interface
 * 
 * @export
 * @interface PatientControllerApiInterface
 */
export interface PatientControllerApiInterface {
    /**
     * 
     * @param {CreatePatientDTO} createPatientDTO 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PatientControllerApiInterface
     */
    createPatientForTherapistRaw(requestParameters: CreatePatientForTherapistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PatientOutputDTO>>;

    /**
     */
    createPatientForTherapist(requestParameters: CreatePatientForTherapistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PatientOutputDTO>;

    /**
     * 
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PatientControllerApiInterface
     */
    deletePatientRaw(requestParameters: DeletePatientRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     */
    deletePatient(requestParameters: DeletePatientRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @param {CreatePatientDTO} inputDTO 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PatientControllerApiInterface
     */
    getPatientsOfTherapistRaw(requestParameters: GetPatientsOfTherapistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PatientOutputDTO>>>;

    /**
     */
    getPatientsOfTherapist(requestParameters: GetPatientsOfTherapistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PatientOutputDTO>>;

}

/**
 * 
 */
export class PatientControllerApi extends runtime.BaseAPI implements PatientControllerApiInterface {

    /**
     */
    async createPatientForTherapistRaw(requestParameters: CreatePatientForTherapistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PatientOutputDTO>> {
        if (requestParameters['createPatientDTO'] == null) {
            throw new runtime.RequiredError(
                'createPatientDTO',
                'Required parameter "createPatientDTO" was null or undefined when calling createPatientForTherapist().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/patients`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreatePatientDTOToJSON(requestParameters['createPatientDTO']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PatientOutputDTOFromJSON(jsonValue));
    }

    /**
     */
    async createPatientForTherapist(requestParameters: CreatePatientForTherapistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PatientOutputDTO> {
        const response = await this.createPatientForTherapistRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async deletePatientRaw(requestParameters: DeletePatientRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling deletePatient().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/patients/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async deletePatient(requestParameters: DeletePatientRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deletePatientRaw(requestParameters, initOverrides);
    }

    /**
     */
    async getPatientsOfTherapistRaw(requestParameters: GetPatientsOfTherapistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PatientOutputDTO>>> {
        if (requestParameters['inputDTO'] == null) {
            throw new runtime.RequiredError(
                'inputDTO',
                'Required parameter "inputDTO" was null or undefined when calling getPatientsOfTherapist().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['inputDTO'] != null) {
            queryParameters['inputDTO'] = requestParameters['inputDTO'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/patients`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(PatientOutputDTOFromJSON));
    }

    /**
     */
    async getPatientsOfTherapist(requestParameters: GetPatientsOfTherapistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PatientOutputDTO>> {
        const response = await this.getPatientsOfTherapistRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
